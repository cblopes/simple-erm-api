@using SimpleERP.MVC.Extensions;
@using Microsoft.Extensions.Options;
@model SimpleERP.MVC.Models.EditOrder
@inject IUser AppUser
@inject IOptions<AppSettings> settings

@{
    ViewData["Title"] = "Ver/Alterar Venda";
}

<br />
<nav style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='%236c757d'/%3E%3C/svg%3E&#34;);" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-controller="Order" asp-action="Index">Vendas</a></li>
        <li class="breadcrumb-item active" aria-current="page">Ver/Alterar Venda</li>
    </ol>
</nav>

<h1>Detalhar/Alterar Venda</h1>
<hr />

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClientId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedIn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedIn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Value)
            </th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
                @Html.DisplayFor(model => model.Id)
            </td>
            <td>
                @Html.DisplayFor(model => model.ClientId)
            </td>
            <td>
                @Html.DisplayFor(model => model.CreatedIn)
            </td>
            <td>
                @Html.DisplayFor(model => model.OrderStatus)
            </td>
            <td>
                @Html.DisplayFor(model => model.UpdatedIn)
            </td>
            <td>
                @Html.DisplayFor(model => model.Value)
            </td>
        </tr>
    </tbody>
</table>

<hr />

<div class="row">
    <div class="col">
        <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#createItemModal">
            Novo Item
        </button>

        <div class="modal fade" id="createItemModal" tabindex="-1" role="dialog" aria-labelledby="createItemModal.Id-label" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="createItemModal-label">Adicionar Item ao Pedido</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                    </div>
                    <div class="modal-body">
                        <form id="createItemForm">
                            <div class="mb-3">
                                <label for="createItemProductId" class="form-label">Id do Produto:</label>
                                <input type="text" class="form-control" id="createItemProductId" name="productId" placeholder="c3b79a0a-e5ed-4e7b-a5ce-2485825a0d5a">
                            </div>
                            <div class="mb-3">
                                <label for="createItemQuantity" class="form-label">Quantidade:</label>
                                <input type="number" class="form-control" id="createItemQuantity" name="quantity" value="0">
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="button" class="btn btn-primary" onclick="createItem('@Model.Id')">Confirmar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<br />

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Id do produto</th>
            <th>Quantidade</th>
            <th>Valor Unitário</th>
            <th>Total</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                <td>@Html.DisplayFor(modelItem => item.ProductId)</td>
                <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                <td>@Html.DisplayFor(modelItem => item.UnitaryValue)</td>
                <td>@Html.DisplayFor(modelItem => item.Amount)</td>
                <td>
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#alterItemModal-@item.Id">
                            Alterar
                        </button>
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#removeItemModal-@item.Id">
                            Excluir
                        </button>
                    </div> 
                </td>
            </tr>

            <div class="modal fade" id="alterItemModal-@item.Id" tabindex="-1" role="dialog" aria-labelledby="alterItemModal-@item.Id-label" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="alterItemModal-@item.Id-label">Alterar Item do Pedido</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                        </div>
                        <div class="modal-body">
                            <form id="alterItemForm-@item.Id">
                                <div class="mb-3">
                                    <label for="quantity-@item.Id" class="form-label">Quantidade:</label>
                                    <input type="number" class="form-control" id="quantity-@item.Id" name="quantity" value="@item.Quantity">
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                            <button type="button" class="btn btn-primary" onclick="alterItem('@item.OrderId','@item.Id')">Confirmar</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" id="removeItemModal-@item.Id" tabindex="-1" role="dialog" aria-labelledby="removeItemModal-@item.Id-label" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="deleteItemModal-@item.Id-label">Remover Item do Pedido</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                        </div>
                        <div class="modal-body">
                            <p>Tem certeza que deseja remover este item?</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                            <button type="button" class="btn btn-primary" onclick="removeItem('@item.OrderId','@item.Id')">Confirmar</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        let baseUri = "@settings.Value.ApiUrl";
        let token = "@AppUser.GetUserToken()";

        function alterItem(orderId, itemId) {
            var quantity = $("#quantity-" + itemId).val();

            $.ajax({
                url: baseUri + "/api/v1/orders/" + orderId + "/items/" + itemId,
                type: "PATCH",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + token
                },
                data: JSON.stringify({
                    quantity: quantity
                }),
                success: function () {
                    alert("Item alterado com sucesso!");
                    location.reload(); // recarrega a página para atualizar a tabela
                },
                error: function(xhr, textStatus, errorThrown) {
                  console.error(xhr.status + " " + xhr.statusText);
                  alert("Ocorreu um erro ao tentar alterar o item. Mensagem: " + xhr.responseJSON.errors.Messages[0]);
                }
            });
        }

        function createItem(orderId) {
            let productId = $("#createItemProductId").val();
            let quantity = $("#createItemQuantity").val();

            $.ajax({
                url: baseUri + "/api/v1/orders/" + orderId + "/items",
                type: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + token
                },
                data: JSON.stringify({
                    productId: productId,
                    quantity: quantity
                }),
                success: function () {
                    alert("Item criado com sucesso!");
                    location.reload(); // recarrega a página para atualizar a tabela
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.error(xhr.status + " " + xhr.statusText);
                    alert("Ocorreu um erro ao tentar alterar o item. Mensagem: " + xhr.responseJSON.errors.Messages[0]);
                }
            });
        }

        function removeItem(orderId, itemId) {
            $.ajax({
                url: baseUri + "/api/v1/orders/" + orderId + "/items/" + itemId,
                type: "DELETE",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + token
                },
                data: JSON.stringify(),
                success: function () {
                    alert("Item removido com sucesso!");
                    location.reload(); // recarrega a página para atualizar a tabela
                },
                error: function(xhr, textStatus, errorThrown) {
                  console.error(xhr.status + " " + xhr.statusText);
                  alert("Ocorreu um erro ao tentar alterar o item. Mensagem: " + xhr.responseJSON.errors.Messages[0]);
                }
            });
        }
    </script>
}
